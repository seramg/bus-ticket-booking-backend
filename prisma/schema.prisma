// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  customer
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  password  String
  phone     String
  role      Role      @default(customer)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Booking   Booking[]

  @@map("users")
}

model Location {
  id              Int      @id @default(autoincrement())
  name            String
  shortCode       String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  tripOrigin      Trip[]   @relation("Trip Origin")
  tripdestination Trip[]   @relation("Trip Destination")
  busOrigin       Bus[]    @relation("Bus Origin")
  busDestination  Bus[]    @relation("Bus Destination")

  @@map("location")
}

model Bus {
  id             String   @id @default("A1")
  originId       Int
  destinationId  Int
  busOrigin      Location @relation("Bus Origin", fields: [originId], references: [id])
  busDestination Location @relation("Bus Destination", fields: [destinationId], references: [id])
  Trip           Trip[]   @relation("Trip Bus")

  @@map("bus")
}

enum BusType {
  AC
  NON_AC
}

enum SeatType {
  SLEEPER
  SEATER
}

model Trip {
  id              Int      @id @default(autoincrement())
  originId        Int
  destinationId   Int
  origin          Location @relation("Trip Origin", fields: [originId], references: [id])
  destination     Location @relation("Trip Destination", fields: [destinationId], references: [id])
  tripDate        String
  departure       DateTime
  arrival         DateTime
  durationInHours Int
  busId           String
  bus             Bus      @relation("Trip Bus", fields: [busId], references: [id])
  busType         BusType
  seatType        SeatType
  totalSeats      Int
  farePerSeat     String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[] @relation("Trip Details")

  @@map("trip")
}

enum Gender {
  male
  female
}

model PassengerDetails {
  id              Int    @id @default(autoincrement())
  seatNumber      String
  passengerName   String
  passengerAge    Int
  passengerGender Gender

  @@map("passenger details")
}

enum BookingStatus {
  confirmed
  cancelled
}

model Booking {
  id              Int           @id @default(autoincrement())
  tripId          Int
  trip            Trip          @relation("Trip Details", fields: [tripId], references: [id])
  status          BookingStatus
  seatNumber      String
  passengerName   String
  passengerAge    Int
  passengerGender Gender
  fare            String
  userId          Int
  bookedBy        User          @relation(fields: [userId], references: [id])
  pnrNumber       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("booking")
}
